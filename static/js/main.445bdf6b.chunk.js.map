{"version":3,"sources":["Components/JumbotronContainer.jsx","Components/InfoContainer.jsx","Components/PortfolioContainer.jsx","Components/PortfolioItems.jsx","Components/Contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["JumbotronContainer","Jumbotron","fluid","className","InfoContainer","Container","Row","left","src","alt","PortfolioContainer","PortfolioItems","right","href","Contact","App","props","state","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0YAeeA,MAXf,WACI,OACQ,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,aACvB,yBAAKA,UAAU,oBACX,yCACA,sD,sCCoDLC,MAvDf,WACI,OACI,6BACI,kBAACC,EAAA,EAAD,CAAWH,OAAK,EAACC,UAAU,iBACvB,kBAACG,EAAA,EAAD,CAAKH,UAAU,OAAf,koBAGA,kBAACG,EAAA,EAAD,CAAKH,UAAU,QAAf,0DAGA,kBAAC,IAAD,CAAOI,MAAI,GACX,kBAACD,EAAA,EAAD,CAAKH,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKK,IAAI,gBAAgBC,IAAI,GAAGN,UAAU,cAC1C,oCACA,8DAEJ,yBAAKA,UAAU,YACX,yBAAKK,IAAI,eAAeC,IAAI,GAAGN,UAAU,cACzC,mCACA,wDAEJ,yBAAKA,UAAU,YACX,yBAAKK,IAAI,kBAAkBC,IAAI,GAAGN,UAAU,cAC5C,0CACA,8DAEJ,yBAAKA,UAAU,YACX,yBAAKK,IAAI,gBAAgBC,IAAI,GAAGN,UAAU,cAC1C,qCACA,wDAEJ,yBAAKA,UAAU,YACX,yBAAKK,IAAI,cAAcC,IAAI,GAAGN,UAAU,cACxC,mCACA,8DAEJ,yBAAKA,UAAU,YACX,yBAAKK,IAAI,eAAeC,IAAI,GAAGN,UAAU,cACzC,oCACA,kDAEJ,yBAAKA,UAAU,YACX,yBAAKK,IAAI,kBAAkBC,IAAI,GAAGN,UAAU,cAC5C,uCACA,uD,MCtCTO,MATf,WAEI,OACI,kBAACL,EAAA,EAAD,CAAWH,OAAK,EAACC,UAAU,sBACvB,2C,MCqCGQ,MAxCf,WACI,OAEI,kBAAC,IAAD,CAAOC,OAAK,GACZ,kBAACP,EAAA,EAAD,CAAWF,UAAU,kBACjB,kBAACG,EAAA,EAAD,KACI,uBAAGO,KAAK,4BAA4BV,UAAU,iBAC1C,yBAAKA,UAAU,uBACf,0DACA,0CAGJ,uBAAGU,KAAK,0BAA0BV,UAAU,iBACxC,yBAAKA,UAAU,sBACf,4CACA,2DAGJ,uBAAGU,KAAK,uCAAuCV,UAAU,iBACrD,yBAAKA,UAAU,sBACf,yCACA,mCAEJ,uBAAGU,KAAK,sBAAsBV,UAAU,iBACpC,yBAAKA,UAAU,sBACf,wCACA,mEAGJ,uBAAGU,KAAK,+BAA+BV,UAAU,iBAC7C,yBAAKA,UAAU,uBACf,0CACA,qD,MCzBLW,MARf,WACI,OACI,kBAACT,EAAA,EAAD,CAAWF,UAAU,WACjB,iRAAsP,uBAAGU,KAAK,8BAAR,UAAtP,yCCuBGE,G,wDAnBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAFM,E,qDAOjB,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAdUe,cCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.445bdf6b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Jumbotron } from 'reactstrap'\r\nimport './JumbotronContainer.css'\r\n\r\nfunction JumbotronContainer() {\r\n    return (\r\n            <Jumbotron fluid className=\"Jumbotron\">\r\n                <div className=\"JumbotronContent\">\r\n                    <h1>Alex Bond</h1>\r\n                    <h4>Front-end Developer</h4> \r\n                </div>\r\n            </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default JumbotronContainer\r\n","import React from 'react'\r\nimport { Container, Row } from 'reactstrap'\r\nimport Slide from 'react-reveal/Slide';\r\n\r\nimport './InfoContainer.css'\r\n\r\nfunction InfoContainer() {\r\n    return (\r\n        <div>\r\n            <Container fluid className=\"InfoContainer\">\r\n                <Row className=\"Bio\">\r\n                    Hey I'm Alex. I am a front-end web developer with a bachelor's degree in Emerging Media and Communications from the University of Texas at Dallas. I have been creating websites for about 10 years now, starting out with video game fansites on GeoCities. I have professional experience developing landing pages, single page applications, and many other forms of engaging web content, as well as some experience with backend technologies like Node.js and MongoDB working on things like cool Discord bots! When I am not coding, I am watching watching the Mavericks play or having my cat Yuri chase a laser pointer around my apartment all day.\r\n                </Row>\r\n                <Row className=\"Tech\">\r\n                    Some of the technologies I am proficient with include: \r\n                </Row>\r\n                <Slide left>\r\n                <Row className=\"TechList\">\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/html5.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>HTML</h2>\r\n                        <p>★★★★★</p>       \r\n                    </div>\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/css3.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>CSS</h2>\r\n                        <p>★★★★</p>       \r\n                    </div>\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/js-logo.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>JavaScript</h2>\r\n                        <p>★★★★★</p>       \r\n                    </div>\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/react.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>React</h2>\r\n                        <p>★★★★</p>       \r\n                    </div>\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/vue.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>Vue</h2>\r\n                        <p>★★★★★</p>       \r\n                    </div>\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/node.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>Node</h2>\r\n                        <p>★★★</p>       \r\n                    </div>\r\n                    <div className=\"TechLogo\">\r\n                        <img src=\"img/mongodb.png\" alt=\"\" className=\"TechImage\"/>\r\n                        <h2>MongoDB</h2>\r\n                        <p>★★★</p>       \r\n                    </div>\r\n                </Row>\r\n                </Slide>\r\n            </Container>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default InfoContainer","import React from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport './PortfolioContainer.css'\r\n\r\nfunction PortfolioContainer () {\r\n\r\n    return (\r\n        <Container fluid className=\"PortfolioContainer\">\r\n            <h1>Portfolio</h1>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PortfolioContainer","import React from 'react'\r\nimport { Container, Row } from 'reactstrap'\r\nimport Slide from 'react-reveal/Slide';\r\nimport './PortfolioItems.css'\r\n\r\nfunction PortfolioItems () {\r\n    return (\r\n\r\n        <Slide right>\r\n        <Container className=\"PortfolioItems\">\r\n            <Row>\r\n                <a href=\"https://vertrauen-us.com/\" className=\"PortfolioLink\">\r\n                    <div className=\"PortfolioImage VCS\"></div>\r\n                    <h4>Vertrauen Chemie Solutions</h4>\r\n                    <p>HTML - CSS</p>\r\n                </a>\r\n                \r\n                <a href=\"https://movieknight.xyz\" className=\"PortfolioLink\">\r\n                    <div className=\"PortfolioImage MK\"></div>\r\n                    <h4>Movie Knight</h4>\r\n                    <p>JavaScript - Node - MongoDB</p>\r\n                </a>\r\n                \r\n                <a href=\"https://alexbond.github.io/dotabuddy\" className=\"PortfolioLink\">\r\n                    <div className=\"PortfolioImage DB\"></div>\r\n                    <h4>DotaBuddy</h4>\r\n                    <p>Vue</p>\r\n                </a>\r\n                <a href=\"https://fastvisa.us\" className=\"PortfolioLink\">\r\n                    <div className=\"PortfolioImage FV\"></div>\r\n                    <h4>FastVisa</h4>\r\n                    <p>React - Gatsby - Rails - Vue - Vuex</p>\r\n                </a>\r\n                \r\n                <a href=\"https://www.goscribbler.com/\" className=\"PortfolioLink\">\r\n                    <div className=\"PortfolioImage SCR\"></div>\r\n                    <h4>GoScribber</h4>\r\n                    <p>React - Wordpress</p>\r\n                </a>\r\n            </Row>\r\n        </Container>\r\n        </Slide>\r\n    ) \r\n}\r\n\r\nexport default PortfolioItems","import React from 'react'\r\nimport { Container, Row, Col} from 'reactstrap'\r\nimport './Contact.css'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <Container className=\"Contact\">\r\n            <h4>If you would like to contact me for a quote to develop your own website, would like to discuss a job opening, or have any other questions, feel free to contact me at obadere@gmail.com or check out some of what I am currently working on at my <a href=\"https://github.com/ufufuru\">GitHub</a>. Thanks for giving my work a look!</h4>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react';\nimport JumbotronContainer from './Components/JumbotronContainer'\nimport InfoContainer from './Components/InfoContainer'\nimport PortfolioContainer from './Components/PortfolioContainer'\nimport PortfolioItems from './Components/PortfolioItems'\nimport Contact from './Components/Contact'\nimport { Container, Row, Col } from 'reactstrap'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <JumbotronContainer/>\n        <InfoContainer/>\n        <PortfolioContainer/>\n        <PortfolioItems/>\n        <Contact/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}